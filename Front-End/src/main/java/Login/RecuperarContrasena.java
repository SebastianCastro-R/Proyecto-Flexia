package Login;

import java.awt.*;

/**
 *
 * @author Karol
 */
public class RecuperarContrasena extends javax.swing.JFrame {
    
    private String correoUsuario;
    private String codigoGenerado = "";

    /**
     * Creates new form RecuperarContrasena
     */
    public RecuperarContrasena(String correoUsuario) {
        this.correoUsuario = correoUsuario;
        initComponents();
        // Mostrar el correo en el campo de texto
        MailText.setText(correoUsuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MailText = new componentes.IconTextField();
        ValidarButton = new javax.swing.JButton();
        Codigo = new javax.swing.JLabel();
        Correo = new javax.swing.JLabel();
        Chek = new javax.swing.JLabel();
        EnviarButton = new javax.swing.JButton();
        CodeText = new componentes.IconTextField();
        Title = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 320));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MailText.setForeground(new java.awt.Color(153, 153, 153));
        MailText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mail.png"))); // NOI18N
        MailText.setIconGap(8);
        MailText.setEditable(false);
        MailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MailTextActionPerformed(evt);
            }
        });
        jPanel1.add(MailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 210, 35));

        ValidarButton.setBackground(new java.awt.Color(152, 206, 255));
        ValidarButton.setFont(new java.awt.Font("Epunda Slab", 0, 14)); // NOI18N
        ValidarButton.setText("Validar código");
        ValidarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ValidarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ValidarButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validarCodigoAction(evt); // ¡ESTA LÍNEA FALTABA!
            }
        });
        ValidarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ValidarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, 35));

        Codigo.setFont(new java.awt.Font("Epunda Slab", 0, 18)); // NOI18N
        Codigo.setText("Código:");
        Codigo.setToolTipText("");
        jPanel1.add(Codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        Correo.setFont(new java.awt.Font("Epunda Slab", 0, 18)); // NOI18N
        Correo.setText("Correo Eléctronico:");
        Correo.setToolTipText("");
        jPanel1.add(Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 150, -1));

        Chek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Group 37.png"))); // NOI18N
        jPanel1.add(Chek, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        EnviarButton.setBackground(new java.awt.Color(30, 56, 136));
        EnviarButton.setFont(new java.awt.Font("Epunda Slab", 0, 14)); // NOI18N
        EnviarButton.setForeground(new java.awt.Color(250, 250, 250));
        EnviarButton.setText("Enviar código");
        EnviarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EnviarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EnviarButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviarCodigoAction(evt);
            }
        });
        jPanel1.add(EnviarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 110, 35));

        CodeText.setForeground(new java.awt.Color(153, 153, 153));
        CodeText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cuida_number-outline.png"))); // NOI18N
        CodeText.setIconGap(8);
        CodeText.setText("12345");
        CodeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CodeTextMouseClicked(evt);
            }
        });
        jPanel1.add(CodeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 140, 35));

        Title.setFont(new java.awt.Font("Epunda Slab SemiBold", 1, 20)); // NOI18N
        Title.setText("Recuperación de Contraseña");
        Title.setToolTipText("");
        jPanel1.add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 310, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void enviarCodigoAction(java.awt.event.MouseEvent evt) {
        // Deshabilitar el botón para evitar múltiples clics
        EnviarButton.setEnabled(false);
        EnviarButton.setText("Enviando...");
        
        new Thread(() -> {
            try {
                // Generar código aleatorio
                codigoGenerado = String.valueOf((int)(Math.random() * 900000) + 100000);

                // Configura tu correo
                String remitente = "alexandriabiblioteca611@gmail.com";
                String password = "pnxqpirozaqbaidm";
                String destinatario = correoUsuario;

                // Validar que el correo no esté vacío
                if (destinatario == null || destinatario.trim().isEmpty()) {
                    javax.swing.SwingUtilities.invokeLater(() -> {
                        javax.swing.JOptionPane.showMessageDialog(this,
                            "No se encontró el correo electrónico.",
                            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                        EnviarButton.setEnabled(true);
                        EnviarButton.setText("Enviar código");
                    });
                    return;
                }

                String asunto = "Código de recuperación - Biblioteca Alexandria";
                String mensaje = "Hola,\n\nTu código de recuperación es: " + codigoGenerado +
                                "\n\nIngresa este código en la aplicación para continuar con el proceso de recuperación de contraseña." +
                                "\n\nEste código es válido por 10 minutos." +
                                "\n\nSi no solicitaste este código, por favor ignora este mensaje." +
                                "\n\nAtentamente,\nEquipo de Biblioteca Alexandria";

                java.util.Properties props = new java.util.Properties();
                props.put("mail.smtp.auth", "true");
                props.put("mail.smtp.starttls.enable", "true");
                props.put("mail.smtp.host", "smtp.gmail.com");
                props.put("mail.smtp.port", "587");
                props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
                props.put("mail.smtp.connectiontimeout", "10000");
                props.put("mail.smtp.timeout", "10000");

                javax.mail.Session session = javax.mail.Session.getInstance(props,
                    new javax.mail.Authenticator() {
                        protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                            return new javax.mail.PasswordAuthentication(remitente, password);
                        }
                    });

                javax.mail.Message message = new javax.mail.internet.MimeMessage(session);
                message.setFrom(new javax.mail.internet.InternetAddress(remitente));
                message.setRecipients(javax.mail.Message.RecipientType.TO,
                        javax.mail.internet.InternetAddress.parse(destinatario));
                message.setSubject(asunto);
                message.setText(mensaje);

                javax.mail.Transport.send(message);

                javax.swing.SwingUtilities.invokeLater(() -> {
                    javax.swing.JOptionPane.showMessageDialog(this,
                        "✅ Código enviado a: " + destinatario +
                        "\n\nRevisa tu bandeja de entrada o spam.",
                        "Correo Enviado", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                    // Preparar la interfaz para la validación
                    CodeText.setText("");
                    CodeText.setForeground(Color.BLACK);
                    CodeText.setEnabled(true);
                    ValidarButton.setEnabled(true);
                });

            } catch (Exception e) {
                e.printStackTrace();
                // Mostrar error en el hilo de EDT
                javax.swing.SwingUtilities.invokeLater(() -> {
                    String errorMsg = "Error al enviar el correo.\n";
                    
                    if (e.getMessage().contains("Authentication failed")) {
                        errorMsg += "Error de autenticación. Verifica la contraseña de aplicación.";
                    } else if (e.getMessage().contains("Could not connect to SMTP host")) {
                        errorMsg += "No se pudo conectar al servidor. Verifica tu conexión a internet.";
                    } else {
                        errorMsg += "Detalles: " + e.getMessage();
                    }
                    
                    javax.swing.JOptionPane.showMessageDialog(this,
                        errorMsg,
                        "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                });
            } finally {
                // Rehabilitar el botón en el hilo de EDT
                javax.swing.SwingUtilities.invokeLater(() -> {
                    EnviarButton.setEnabled(true);
                    EnviarButton.setText("Enviar código");
                });
            }
        }).start();
    }

    private void validarCodigoAction(java.awt.event.MouseEvent evt) {
        String codigoIngresado = CodeText.getText().trim();
        
        // Validar que se haya ingresado un código
        if (codigoIngresado.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Por favor ingresa el código que recibiste por correo.",
                "Código vacío", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Validar que se haya generado un código primero
        if (codigoGenerado == null || codigoGenerado.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Primero debes solicitar un código de verificación.",
                "Código no generado", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (codigoIngresado.equals(codigoGenerado)) {
            Chek.setVisible(true);
            javax.swing.JOptionPane.showMessageDialog(this,
                "✅ Código validado correctamente.\n\nAhora puedes establecer tu nueva contraseña.",
                "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            // Abrir ventana para nueva contraseña
            abrirVentanaNuevaContrasena();
            
        } else {
            Chek.setVisible(false);
            javax.swing.JOptionPane.showMessageDialog(this,
                "❌ Código incorrecto. Por favor verifica el código e intenta nuevamente.",
                "Error de validación", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }

    private void abrirVentanaNuevaContrasena() {
        // Cerrar esta ventana actual
        this.dispose();
        
        // Crear y mostrar la ventana de nueva contraseña
        java.awt.EventQueue.invokeLater(() -> {
            new NuevaContrasena(correoUsuario).setVisible(true);
        });
    }

    private void MailTextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void ValidarButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void ValidarButtonMouseEntered(java.awt.event.MouseEvent evt) {                                           
        ValidarButton.setBackground(new Color(0x1E3888));
        ValidarButton.setForeground(Color.WHITE);
    }                                          

    private void ValidarButtonMouseExited(java.awt.event.MouseEvent evt) {                                          
        ValidarButton.setBackground(new Color(0x98CEFF));
        ValidarButton.setForeground(Color.BLACK);
    }                                         

    private void EnviarButtonMouseEntered(java.awt.event.MouseEvent evt) {                                          
        EnviarButton.setBackground(new Color(0xD9D9D9));
        EnviarButton.setForeground(new Color(0x1E3888));
    }                                         

    private void EnviarButtonMouseExited(java.awt.event.MouseEvent evt) {                                         
        EnviarButton.setBackground(new Color(0x1E3888));
        EnviarButton.setForeground(Color.WHITE);
    }                                        

    private void CodeTextMouseClicked(java.awt.event.MouseEvent evt) {                                      
        CodeText.setText("");
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecuperarContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecuperarContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecuperarContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecuperarContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Chek;
    private componentes.IconTextField CodeText;
    private javax.swing.JLabel Codigo;
    private javax.swing.JLabel Correo;
    private javax.swing.JButton EnviarButton;
    private componentes.IconTextField MailText;
    private javax.swing.JLabel Title;
    private javax.swing.JButton ValidarButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration                   
}